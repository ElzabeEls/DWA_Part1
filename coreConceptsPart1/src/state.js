//npm init -y
//npm i -D jsdoc
//npm run doc

// @ts-check

/**
 * @typedef {'high'| 'medium' | 'low'} Urgency - The protity that the tasks should take in terms of how quickly it should be completed
 * @typedef {'recent'| 'olderst' | 'upcoming'} Sorting - One of three possible predifined ordering approaches that task can be shown in. `recent` arranges based on the tasks that were created closest to the current date, `oldest` does the opposite, and `upcoming` arranges based on the closest due date (if no due date it will be placed last) 
 */

/**
 *  Creates a unique ID to be used in the app. Value is created by combining two randomised numbers
 * with the current tiestamp. The values are divided by dashes (-) in order to ensure that the 
 * value is treated a a string (and not a number)
 * @returns {string}
 */
const createId = () => {
return 'hello world';
}

/**
 * @typedef {object} Task - An object representing a task to be shown to a user
 * @prop {string} id - A unique value generated by {@link createId} used to identify a task 
 * @prop {string} title - A short user-provided description of what that task entails
 * @prop {boolean} completed - Whether the task has been completed or not
 * @prop {Date} created - The exact date when the task was created in the system
 * @prop {Date} due - A user specified date for when the task should be competed
 * @prop {Urgency} urgency - A user specified indication of how important the task is
 */

/**
 * @typedef {object} Filters - User configured filte values that control what tasks are shown
 * @prop {string} search - A freefrom string of characters that is matched against a task title
 * @prop {Urgency | 'any'} uregency - Only shows tasks matching the value. `any` shows all tasks
 * @prop {Sorting} sorting - Determines the order in which tasks are displayed
*/

/**
 * @typedef {object} State - All data associated with the specific instance of the app
 * @prop {Record<string, Task>} tasks - A list of all tasks that have been created
 * @prop {Array<string>} displaying - `id` values of tasks that should be shown
 * @prop {Filters} filters - An object containing the current filter state of tasks
 */


/**
 * @type {State}
 */
export const state = {
    tasks: {},
    displaying: [],

    filters: {
        search: "",
        sorting: "recent",
        uregency: "any",
    }
}

/*
const state = {
    tasks: {
        'zdaaadafdfsdfw': {
            id: 'zdaaadafdfsdfw',
            title: 'Wash dog',
            completed: false,
            created: new Date('1/1/2010'),
            urgency: 'high',
            due: new Date('1/1/2013'),
        },
        'klaklaerjljkere': {
            id: 'klaklaerjljkere',
            title: 'Clean car',
            completed: true,
            created: new Date('1/1/2011'),
            urgency: 'medium',
            due: null,
        },
    }
}

const statee = {
    displaying: ['zdaaadafdfsdfw'],
    filtes: {
        search: '', // Clean
        uregency: 'any', // 'low'/'medium'/'high'
        sorting: 'Most recent',
    }
}
 */